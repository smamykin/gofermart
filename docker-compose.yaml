version: '3.5'
services:
  gophermart:
    build:
      context: .
      dockerfile: docker-files/dev/gophermart/Dockerfile
      target: dev
    environment:
      DATABASE_DSN: "postgres://postgres:postgres@postgres:5432/postgres"
    volumes:
      - ./:/app
    depends_on:
      - postgres
    ports:
      - "8080:8080"
  postgres:
    image: postgres:15-alpine3.17
    ports:
      - "54323:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      PGDATA: /postgresql/data
    volumes:
      - pgdata:/postgresql/data:rw
      # image runs any .sh, .sql, .sql.gz files in this directory (only if database is empty yet)
      # Warning: scripts in /docker-entrypoint-initdb.d are only run if you start the container with a data directory that is empty; any pre-existing database will be left untouched on container startup. One common problem is that if one of your /docker-entrypoint-initdb.d scripts fails (which will cause the entrypoint script to exit) and your orchestrator restarts the container with the already initialized data directory, it will not continue on with your scripts.
      - ./migrations/init:/docker-entrypoint-initdb.d

volumes:
  pgdata:
    driver: local